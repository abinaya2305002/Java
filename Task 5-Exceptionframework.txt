//Programs on Exception Handling, Custom Exceptions and Interfaces:

1.Exception Handling:
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        try {
            System.out.print("Enter a number: ");
            int num = sc.nextInt();
            int result = 10 / num;
            System.out.println("Result: " + result);
        } catch (ArithmeticException e) {
            System.out.println("Cannot divide by zero.");
        } catch (Exception e) {
            System.out.println("Invalid input.");
        }
    }
}

2.Custom Exception:
class MyCustomException extends Exception {
    public MyCustomException(String message) {
        super(message);
    }
}
public class Main{
    public static void main(String[] args) {
        try {
            int age = 16;
            if (age < 18) {
                throw new MyCustomException("Age must be 18");
            }
            System.out.println("Access granted.");
        } catch (MyCustomException e) {
            System.out.println(e.getMessage());
        }
    }
}

3.Interface:
interface Bike {
    void price();
}
class Royal implements Bike  {
    public void price() {
        System.out.println("Royal Enfield : 100000");
    }
}
class Himalayan implements Bike {
    public void price() {
        System.out.println("Himalayan : 80000");
    }
}
public class Main {
    public static void main(String[] args) {
        Bike re = new Royal();
        re.price();
        Bike him = new Himalayan();
        him.price();
    }
}


